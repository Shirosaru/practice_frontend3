{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/shirosuke/Solidity/practice_frontend2/metamask-sdk-examples/examples/test/examples/test/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,0BAAY,qUAAM,UAAU,CAIhC,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6WAAC,6XAAmB,IAAI;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,gIAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,6XAAmB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///home/shirosuke/Solidity/practice_frontend2/metamask-sdk-examples/examples/test/examples/test/components/Hero.tsx"],"sourcesContent":["\"use client\";\n\nimport Image from \"next/image\";\nimport { useAccount } from \"wagmi\";\n\nexport const Hero = () => {\n  const { isConnected } = useAccount();\n\n  if (isConnected) {\n    return (\n      <section className=\"relative mx-auto mt-28\">\n        <h1 className=\"text-7xl text-zinc-100 font-bold\">Welcome</h1>\n        <p className=\"text-white opacity-70 text-center text-lg\">\n          to the <strong>MetaMask SDK</strong> quick start app!\n          <br /> Add your functionality.\n        </p>\n        <Image\n          src=\"/arrow.svg\"\n          alt=\"Arrow pointing to the connect wallet button\"\n          className=\"absolute scale-y-[-1] hidden md:block md:bottom-[-65px] md:right-[-95px]\"\n          width={130}\n          height={130}\n        />\n      </section>\n    );\n  }\n\n  return (\n    <section className=\"relative mx-auto mt-28\">\n      <h1 className=\"text-7xl text-zinc-100 font-bold\">Welcome</h1>\n      <p className=\"text-white opacity-70 text-center text-lg\">\n        to the <strong>MetaMask SDK</strong> quick start app!\n        <br /> Connect your wallet to get started.\n      </p>\n      <Image\n        src=\"/arrow.svg\"\n        alt=\"Arrow pointing to the connect wallet button\"\n        className=\"absolute hidden md:block md:bottom-5 md:-right-48\"\n        width={150}\n        height={150}\n      />\n    </section>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKO,MAAM,OAAO;IAClB,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8WAAA,CAAA,aAAU,AAAD;IAEjC,IAAI,aAAa;QACf,qBACE,6WAAC;YAAQ,WAAU;;8BACjB,6WAAC;oBAAG,WAAU;8BAAmC;;;;;;8BACjD,6WAAC;oBAAE,WAAU;;wBAA4C;sCAChD,6WAAC;sCAAO;;;;;;wBAAqB;sCACpC,6WAAC;;;;;wBAAK;;;;;;;8BAER,6WAAC,4PAAA,CAAA,UAAK;oBACJ,KAAI;oBACJ,KAAI;oBACJ,WAAU;oBACV,OAAO;oBACP,QAAQ;;;;;;;;;;;;IAIhB;IAEA,qBACE,6WAAC;QAAQ,WAAU;;0BACjB,6WAAC;gBAAG,WAAU;0BAAmC;;;;;;0BACjD,6WAAC;gBAAE,WAAU;;oBAA4C;kCAChD,6WAAC;kCAAO;;;;;;oBAAqB;kCACpC,6WAAC;;;;;oBAAK;;;;;;;0BAER,6WAAC,4PAAA,CAAA,UAAK;gBACJ,KAAI;gBACJ,KAAI;gBACJ,WAAU;gBACV,OAAO;gBACP,QAAQ;;;;;;;;;;;;AAIhB"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file:///home/shirosuke/Solidity/practice_frontend2/metamask-sdk-examples/examples/test/node_modules/.pnpm/%40radix-ui%2Breact-separator%401.1.2_%40types%2Breact-dom%4019.0.4_%40types%2Breact%4019.0.1__%40types%2Breact%4019._rcji5qbauu2xa2qwwrj4crdwbi/node_modules/%40radix-ui/react-separator/src/separator.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n *  Separator\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Separator';\nconst DEFAULT_ORIENTATION = 'horizontal';\nconst ORIENTATIONS = ['horizontal', 'vertical'] as const;\n\ntype Orientation = (typeof ORIENTATIONS)[number];\ntype SeparatorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface SeparatorProps extends PrimitiveDivProps {\n  /**\n   * Either `vertical` or `horizontal`. Defaults to `horizontal`.\n   */\n  orientation?: Orientation;\n  /**\n   * Whether or not the component is purely decorative. When true, accessibility-related attributes\n   * are updated so that that the rendered element is removed from the accessibility tree.\n   */\n  decorative?: boolean;\n}\n\nconst Separator = React.forwardRef<SeparatorElement, SeparatorProps>((props, forwardedRef) => {\n  const { decorative, orientation: orientationProp = DEFAULT_ORIENTATION, ...domProps } = props;\n  const orientation = isValidOrientation(orientationProp) ? orientationProp : DEFAULT_ORIENTATION;\n  // `aria-orientation` defaults to `horizontal` so we only need it if `orientation` is vertical\n  const ariaOrientation = orientation === 'vertical' ? orientation : undefined;\n  const semanticProps = decorative\n    ? { role: 'none' }\n    : { 'aria-orientation': ariaOrientation, role: 'separator' };\n\n  return (\n    <Primitive.div\n      data-orientation={orientation}\n      {...semanticProps}\n      {...domProps}\n      ref={forwardedRef}\n    />\n  );\n});\n\nSeparator.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isValidOrientation(orientation: any): orientation is Orientation {\n  return ORIENTATIONS.includes(orientation);\n}\n\nconst Root = Separator;\n\nexport {\n  Separator,\n  //\n  Root,\n};\nexport type { SeparatorProps };\n"],"names":[],"mappings":";;;;;AAAA,YAAY,WAAW;AAoCnB;AAnCJ,SAAS,iBAAiB;;;;AAM1B,IAAM,OAAO;AACb,IAAM,sBAAsB;AAC5B,IAAM,eAAe;IAAC;IAAc,UAAU;CAAA;AAiB9C,IAAM,YAAkB,qUAAA,UAAA,CAA6C,CAAC,OAAO,iBAAiB;IAC5F,MAAM,EAAE,UAAA,EAAY,aAAa,kBAAkB,mBAAA,EAAqB,GAAG,SAAS,CAAA,GAAI;IACxF,MAAM,cAAc,mBAAmB,eAAe,IAAI,kBAAkB;IAE5E,MAAM,kBAAkB,gBAAgB,aAAa,cAAc,KAAA;IACnE,MAAM,gBAAgB,aAClB;QAAE,MAAM;IAAO,IACf;QAAE,oBAAoB;QAAiB,MAAM;IAAY;IAE7D,OACE,aAAA,GAAA,CAAA,GAAA,sVAAA,CAAA,MAAA,+XAAC,YAAA,CAAU,GAAA,EAAV;QACC,oBAAkB;QACjB,GAAG,aAAA;QACH,GAAG,QAAA;QACJ,KAAK;IAAA;AAGX,CAAC;AAED,UAAU,WAAA,GAAc;AAIxB,SAAS,mBAAmB,WAAA,EAA8C;IACxE,OAAO,aAAa,QAAA,CAAS,WAAW;AAC1C;AAEA,IAAM,OAAO","ignoreList":[0]}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}